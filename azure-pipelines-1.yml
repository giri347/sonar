# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: UseDotNet@2
  inputs:
    version: '3.1.x'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(projectDirectory)\hadar.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'einfo-terraform'
#     appType: 'webApp'
#     WebAppName: 'einfowebappdev151694'
#     deployToSlotOrASE: true
#     ResourceGroupName: 'sa1_test_eic_DevOpslearning'
#     SlotName: 'production'
#     packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'einfo-terraform'
    appType: 'webApp'
    appName: 'einfowebappdev151694'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    deploymentMethod: 'auto'